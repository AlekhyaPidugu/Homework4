if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, ggplot2, dplyr, lubridate, stringr, readxl, data.table, gdata)

final.data <- read_rds("data/output/final_ma_data.rds")

# Group data by county and year, and summarize plan counts
final.plans <- final.data %>%
  filter(snp == "No"  &
           (planid < 800 | planid >= 900) &
           partc_score > 0)

tot.obs <-  as.numeric(count(final.plans%>%ungroup()))

plan_counts <- final.plans %>%
 group_by(county, year) %>%
 select(county,year) %>% 
  summarize(plan_count = n())

question1 <- ggplot(plan_counts, aes(x = as.factor(year), y = plan_count)) +
  geom_boxplot(outlier.shape = NA) +
  labs(x = "Year", y = "Plan Count", title = "Distribution of Plan Counts by County Over Time") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 8),   # Adjust the size of y-axis text
        axis.title.y = element_text(size = 10)) + # Adjust the size of y-axis title
  ylim(0, 75) 

question1


#QUESTION 2 good
# Filter the data for the years 2010, 2012, and 2015
  filtered_data <- final.data %>%
    filter(year %in% c(2010, 2012, 2015))

# Create the bar plot
question2 <- ggplot(filtered_data, aes(x = factor(Star_Rating), fill = factor(year))) +
  geom_bar(position = "dodge", stat = "count") +
  labs(x = "Star Rating", y = "Count", title = "Distribution of Star Ratings Over Time") +
  scale_fill_manual(values = c("2010" = "pink", "2012" = "skyblue", "2015" = "purple")) +
  theme_minimal()

print(question2)

#QUESTION 3 good

# Filter the data for years 2010 to 2015
filtered_data <- final.data %>%
  filter(year >= 2010 & year <= 2015)

# Group the data by year and calculate the average benchmark payment for each year
average_benchmark_payments <- filtered_data %>%
  group_by(year) %>%
  summarize(average_benchmark_payment = mean(ma_rate, na.rm = TRUE))

# Print or view the result
print(average_benchmark_payments)

# Plotting the average benchmark payments over time
question3<- ggplot(average_benchmark_payments, aes(x = year, y = average_benchmark_payment)) +
  geom_line() +
  geom_point() +
  labs(title = "Average Benchmark Payment Over Time (2010-2015)",
       x = "Year",
       y = "Average Benchmark Payment") +
  theme_minimal()

question3


#QUESTION 4 good?
q4 <- final.data %>% 
  group_by(year)%>%
  summarize(med_prop = sum(avg_enrollment, na.rm= TRUE)/ sum(avg_eligibles, na.rm = TRUE))

  ggplot(q4, aes(x= year, y = med_prop))+
  geom_line()

#Question 5  good?
ma.data.clean <- final.data%>%
  filter(!is.na(avg_enrollment) & year==2010 & !is.na(partc_score))

ma.data.clean <- ma.data.clean %>%
  mutate(raw_rating=rowMeans(
    cbind(breastcancer_screen,rectalcancer_screen,cv_cholscreen,diabetes_cholscreen,
          glaucoma_test,monitoring,flu_vaccine,pn_vaccine,physical_health,
          mental_health,osteo_test,physical_monitor,primaryaccess,
          hospital_followup,depression_followup,nodelays,carequickly,
          overallrating_care,overallrating_plan,calltime,
          doctor_communicate,customer_service,osteo_manage,
          diabetes_eye,diabetes_kidney,diabetes_bloodsugar,
          diabetes_chol,antidepressant,bloodpressure,ra_manage,
          copd_test,betablocker,bladder,falling,appeals_timely,
          appeals_review),
    na.rm=T)) %>%
  select(contractid, planid, fips, avg_enrollment, state, county, raw_rating, partc_score,
         avg_eligibles, avg_enrolled, premium_partc, risk_ab, Star_Rating,
         bid, avg_ffscost, ma_rate)

ma.data.clean %>% 
  ggplot(aes(x=as.factor(Star_Rating))) + 
  geom_bar() +
  labs(
    x="Star Rating",
    y="Count of Plans",
    title="Frequency Distribution of Star Ratings"
  ) + theme_bw()

ma.rd1 <- ma.data.clean %>%
  filter(Star_Rating==2 | Star_Rating==2.5)

ma.rd1 <- ma.rd1 %>%
  mutate(score = raw_rating - 2.25,
         treat = (score>=0),
         window1 = (score>=-.175 & score<=.175),
         window2 = (score>=-.125 & score<=.125),
         mkt_share = avg_enrollment/avg_eligibles,
         ln_share = log(mkt_share),
         score_treat=score*treat)
star25.1 <- lm(mkt_share ~ score + treat, data=ma.rd1)
star25.2 <- lm(mkt_share ~ score + treat, data= (ma.rd1 %>% filter(window1==TRUE)))
star25.3 <- lm(mkt_share ~ score + treat + score_treat, data= (ma.rd1 %>% filter(window1==TRUE)))
star25.4 <- lm(mkt_share ~ score + treat + score_treat, data= (ma.rd1 %>% filter(window2==TRUE)))
est1 <- as.numeric(star25.1$coef[3])
est2 <- as.numeric(star25.2$coef[3])
est3 <- as.numeric(star25.3$coef[3])
est4 <- as.numeric(star25.4$coef[3])

rows <- tribble(~term, ~ m1, ~ m2, ~ m3 , ~ m4,
                'Bandwidth', "0.25", "0.175", "0.175", "0.125")
attr(rows, 'position')  <- 7
library(modelsummary)
q5 <- modelsummary(list(star25.1, star25.2, star25.3, star25.4),
          keep=c("score", "treatTRUE", "score_treat"),
          coef_map=c("score"="Raw Score", 
                    "treatTRUE"="Treatment",
                    "score_treat"="Score x Treat"),
          gof_map=c("nobs", "r.squared"),
          add_rows=rows)

print(q5)

#QUESTION 6 Good
install.packages("rdrobust")
library(rdrobust)

# Estimate the effect of receiving a 3-star versus a 2.5-star rating
ma.rd3 <- ma.data.clean %>%
  filter(Star_Rating==2.5 | Star_Rating==3) %>%
  mutate(score = raw_rating - 3,
         treat = (score>=0),
         window1 = (score>=-.125 & score<=.125),
         window2 = (score>=-.125 & score<=.125),
         mkt_share = avg_enrollment/avg_eligibles,
         ln_share = log(mkt_share),
         score_treat=score*treat)

est3 <- rdrobust(y=ma.rd3$mkt_share, x=ma.rd3$score, c=0,
                 h=0.125, p=1, kernel="uniform", vce="hc0",
                 masspoints="off")

summary(est3)

# Estimate the effect of receiving a 3.5-star rating
ma.rd35 <- ma.data.clean %>%
  filter(Star_Rating==3 | Star_Rating==3.5) %>%
  mutate(score = raw_rating - 3.5,
         treat = (score>=0),
         window1 = (score>=-.125 & score<=.125),
         window2 = (score>=-.125 & score<=.125),
         mkt_share = avg_enrollment/avg_eligibles,
         ln_share = log(mkt_share),
         score_treat=score*treat)

est35 <- rdrobust(y=ma.rd35$mkt_share, x=ma.rd35$score, c=0,
                  h=0.125, p=1, kernel="uniform", vce="hc0",
                  masspoints="off")

summary(est35)


#QUESTION 7 FIXXXX
# Function to estimate effect for a given bandwidth
estimate_effect <- function(data, bandwidth, star_rating) {
  model <- lm(mkt_share ~ score + treat + score:treat, 
              data = data %>% filter(abs(score) <= bandwidth))
  effect <- coef(model)["treatTRUE"]
  return(effect)
}

# Create a data frame to store results
results <- data.frame(
  Bandwidth = c(0.1, 0.12, 0.13, 0.14, 0.15),
  Star3_Effect = NA,
  Star3.5_Effect = NA
)

# Loop through each bandwidth and estimate effects
for (i in 1:nrow(results)) {
  results[i, "Star3_Effect"] <- estimate_effect(ma.rd1, results[i, "Bandwidth"], 3)
  results[i, "Star3.5_Effect"] <- estimate_effect(ma.rd1, results[i, "Bandwidth"], 3.5)
}

# Melt the results for plotting
if (!requireNamespace("reshape2", quietly = TRUE)) {
  install.packages("reshape2")
}
library(reshape2)
melted_results <- melt(results, id.vars = "Bandwidth", variable.name = "Star_Rating", value.name = "Effect")

# Plot the results
ggplot(melted_results, aes(x = Bandwidth, y = Effect, color = Star_Rating)) +
  geom_line() +
  geom_point() +
  labs(
    x = "Bandwidth",
    y = "Effect",
    title = "Effect of Star Rating on Enrollments by Bandwidth"
  ) +
  theme_minimal()

#QUESTION 8 FIXXXXXX
ggplot(data = ma.rd1, aes(x = score, fill = as.factor(window1))) +
  geom_density(alpha = 0.5) +
  facet_wrap(~ window1, scales = "free") +
  labs(
    x = "Running Variable (Score)",
    y = "Density",
    title = "Distribution of Running Variable Before and After Threshold Values"
  ) +
  theme_minimal()

#QUESTION 9 FIXXXXX
ma.rd1 <- ma.rd1 %>%
  mutate(window1 = between(score, -0.175, 0.175))

# Create a function to compare plan characteristics
compare_characteristics <- function(data1, data2, characteristic) {
  # Calculate percentages of each characteristic for both groups
  data1_summary <- data1 %>% 
    count({{ characteristic }}) %>% 
    mutate(Percentage = n / sum(n) * 100) %>%
    rename(Group = "window1")

  data2_summary <- data2 %>% 
    count({{ characteristic }}) %>% 
    mutate(Percentage = n / sum(n) * 100) %>%
    rename(Group = "window2")

  # Combine the summaries
  combined_summary <- bind_rows(data1_summary, data2_summary)

  # Plot the comparison
  ggplot(combined_summary, aes(x = {{ characteristic }}, y = Percentage, fill = as.factor(Group))) +
    geom_bar(stat = "identity", position = "dodge") +
    labs(
      x = paste0("Is ", enquo(characteristic)),
      y = "Percentage",
      title = paste0("Comparison of ", quo_name(characteristic), " between Groups")
    ) +
    theme_minimal()
}

# Apply the function to compare plan characteristics using org_type as HMO status
comparison_plot <- compare_characteristics(
  data1 = ma.rd1 %>% filter(data1_summary),
  data2 = ma.rd1 %>% filter(!data1_summary),
  characteristic = planid
)

# Show the comparison plot
print(comparison_plot)


rm(list=c("ma.data.clean"))
save.image("/Users/alekhyapidugu/Desktop/homework4/Submission2/Analysis/Hwk4_workspace.Rdata")